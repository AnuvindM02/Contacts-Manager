@model IEnumerable<PersonResponse>
@{
    ViewBag.Title = "Persons";
}

<form asp-controller="Person" asp-action="Index" method="get">
<h1>Persons</h1>
<div class="my-container">
    <a asp-controller="Person" asp-action="Create" style="color:white;" class="download-link">Create Person</a>
        <a asp-controller="Person" asp-action="PersonPDF" style="color:white" class="download-link">Download as PDF</a>
        <a asp-controller="Person" asp-action="PersonCSV" style="color:white" class="download-link">Download as CSV</a>
        <a asp-controller="Person" asp-action="PersonExcel" style="color:white" class="download-link">Download as Excel Sheet</a>
</div>

<div class="flex mySearchBox">

    <div class="flex-1">
        <select class="form-input" name="searchBy">
            @foreach (var field in ViewBag.SearchFields)
            {
                if(field.Key == ViewBag.CurrentSearchBy)
                {
                    <option value="@field.Key" selected="selected">@field.Value</option>
                }
                else
                {
                    <option value="@field.Key">@field.Value</option>
                }
            }
        </select>
    </div>

    <div class="flex-1">
        <input type="search" id="Search" class="form-input" placeholder="Search" name="searchString" value="@ViewBag.CurrentSearchString" />
    </div>

    <div class="flex-1">
        <button class="mybutton">Search</button>
        <a href="~/person/index" class="link-hover" style="color:white">Clear all</a>
    </div>
</div>

<table class="table w-100 mt">
    <thead>
        <tr>
                @await Html.PartialAsync("_GridColumnHeader",new ViewDataDictionary(ViewData){
                    {"ColumnName",nameof(PersonResponse.PersonName)},
                    {"DisplayName","Person Name"}
                })
                @await Html.PartialAsync("_GridColumnHeader",new ViewDataDictionary(ViewData){
                    {"ColumnName",nameof(PersonResponse.Email)},
                    {"DisplayName","Email"}
                })
                @await Html.PartialAsync("_GridColumnHeader",new ViewDataDictionary(ViewData){
                    {"ColumnName",nameof(PersonResponse.DateOfBirth)},
                    {"DisplayName","Date of Birth"}
                })
                @await Html.PartialAsync("_GridColumnHeader",new ViewDataDictionary(ViewData){
                    {"ColumnName",nameof(PersonResponse.Age)},
                    {"DisplayName","Age"}
                })
                @await Html.PartialAsync("_GridColumnHeader",new ViewDataDictionary(ViewData){
                    {"ColumnName",nameof(PersonResponse.Gender)},
                    {"DisplayName","Gender"}
                })
                @await Html.PartialAsync("_GridColumnHeader",new ViewDataDictionary(ViewData){
                    {"ColumnName",nameof(PersonResponse.Country)},
                    {"DisplayName","Country"}
                })
                @await Html.PartialAsync("_GridColumnHeader",new ViewDataDictionary(ViewData){
                    {"ColumnName",nameof(PersonResponse.Address)},
                    {"DisplayName","Address"}
                })
                @await Html.PartialAsync("_GridColumnHeader",new ViewDataDictionary(ViewData){
                {"ColumnName",nameof(PersonResponse.ReceiveNewsLetters)},
                {"DisplayName","Receive News Letters"}
                })
                <th>Options</th>
        </tr>
    </thead>
    <tbody>
        @foreach (PersonResponse person in Model)
        {
            <tr>
                    <td style="width:15%">@person.PersonName</td>
                    <td style="width:20%">@person.Email</td>
                    <td style="width:13%">@person.DateOfBirth?.ToString("dd MMM yyyy")</td>
                    <td style="width:9%">@person.Age</td>
                    <td style="width:9%">@person.Gender</td>
                    <td style="width:10%">@person.Country</td>
                    <td style="width:15%">@person.Address</td>
                    <td style="width:20%">@person.ReceiveNewsLetters</td>
                    <th style="width:25%"><a asp-controller="Person" asp-action="Edit" asp-route-personID="@person.PersonID">Edit</a>
                        <a asp-controller="Person" asp-action="Delete" asp-route-personID="@person.PersonID" onclick="deletealert">Delete</a>
                    </th>

            </tr>
        }
        <tr></tr>
    </tbody>

</table>
</form>
<script>
    function deletealert() {
        swal({
            title: "Are you sure?",
            text: "Once deleted, you will not be able to recover this contact!",
            type: "warning",
            showCancelButton: true,
            confirmButtonColor: "#DD6B55",
            confirmButtonText: "Yes, delete it!",
            cancelButtonText: "No, cancel plx!",
            closeOnConfirm: false,
            closeOnCancel: false
        },
            function (isConfirm) {
                if (isConfirm) {
                    swal("Deleted!", "Your contact has been deleted.", "success");
                } else {
                    swal("Cancelled", "Your contact is safe :)", "error");
                }
            });
    }

</script>